{
    "override_base_config": "certora/confs/base.conf",
    "assert_autofinder_success": true,
    "storage_extension_annotation": true,
    "contract_extensions": {
        "CashModuleCoreHarness": [{
            "extension": "CashModuleSetters",
            "exclude": [
                "setupModule",
                "roleRegistry",
                "etherFiDataProvider",
                "UPGRADE_INTERFACE_VERSION",
                "MAX_CASHBACK_PERCENTAGE",
                "pause",
                "ETH",
                "HUNDRED_PERCENT_IN_BPS",
                "paused",
                "proxiableUUID",
                "CASH_MODULE_CONTROLLER_ROLE",
                "unpause",
                "ETHER_FI_WALLET_ROLE",
                "getNonce",
                "upgradeToAndCall"
            ]
        }]
    },
    "files": [
        "certora/harnesses/EtherFiSafeHarness.sol",
        "certora/harnesses/CashModuleCoreHarness.sol",
        "lib/openzeppelin-contracts/contracts/mocks/ERC1271WalletMock.sol",
        "src/beacon-factory/BeaconFactory.sol",
        "src/cashback-dispatcher/CashbackDispatcher.sol",
        "src/data-provider/EtherFiDataProvider.sol",
        "src/debt-manager/DebtManagerAdmin.sol",
        "src/debt-manager/DebtManagerCore.sol",
        "src/debt-manager/DebtManagerInitializer.sol",
        "src/debt-manager/DebtManagerStorageContract.sol",
        "src/hook/EtherFiHook.sol",
        "src/modules/ModuleBase.sol",
        "src/modules/cash/CashEventEmitter.sol",
        "src/modules/cash/CashLens.sol",
        "src/modules/cash/CashModuleSetters.sol",
        "src/mocks/MockERC20.sol",
        "src/oracle/PriceProvider.sol",
        "src/role-registry/RoleRegistry.sol",
        "src/safe/EtherFiSafeFactory.sol",
        "src/settlement-dispatcher/SettlementDispatcher.sol",
        "src/top-up/TopUpDest.sol",
        "src/top-up/TopUpFactory.sol",
        "src/utils/UpgradeableProxy.sol",
    ],
    "hashing_length_bound": "300",
    "link": [
        "CashLens:cashModule=CashModuleCoreHarness",
        "CashModuleCoreHarness:etherFiDataProvider=EtherFiDataProvider",
        "CashModuleSetters:etherFiDataProvider=EtherFiDataProvider",
        "ModuleBase:etherFiDataProvider=EtherFiDataProvider",
        "CashbackDispatcher:etherFiDataProvider=EtherFiDataProvider",
        "DebtManagerCore:etherFiDataProvider=EtherFiDataProvider",
        "EtherFiHook:dataProvider=EtherFiDataProvider",
        "EtherFiSafeHarness:dataProvider=EtherFiDataProvider"
    ],
    "loop_iter": "2",
    "prover_args": [
        "-allowArrayLengthUpdates true",
        "-maxCommandCount 2319570",
        "-destructiveOptimizations twostage"
        ],
    "msg": "CashModuleCore",
    "optimistic_hashing": true,
    "optimistic_loop": true,
    "process": "emv",
    "solc_via_ir": false,
    "struct_link": [
        "CashbackDispatcher:cashModule=CashModuleCoreHarness",
        "CashbackDispatcher:priceProvider=PriceProvider",
        "CashModuleCoreHarness:roleRegistry=RoleRegistry",
        "CashModuleCoreHarness:cashbackDispatcher=CashbackDispatcher",
        "CashModuleCoreHarness:cashEventEmitter=CashEventEmitter",
        "CashModuleCoreHarness:debtManager=DebtManagerCore",
        "CashModuleSetters:cashEventEmitter=CashEventEmitter",
        "EtherFiDataProvider:cashModule=CashModuleCoreHarness",
        "EtherFiDataProvider:cashLens=CashLens",
        "EtherFiDataProvider:etherFiSafeFactory=EtherFiSafeFactory",
        "EtherFiDataProvider:hook=EtherFiHook",
        "EtherFiDataProvider:roleRegistry=RoleRegistry",
        "EtherFiDataProvider:priceProvider=PriceProvider"
    ],
    "verify": "CashModuleCoreHarness:certora/specs/CashModuleCore.spec"
}
